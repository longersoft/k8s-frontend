name: Code Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  # CodeLint:
  #   name: Code Lint
  #   uses: ./.github/workflows/tpl_code_quality.yml
  
  # SonarScan:
  #   name: Sonar Scan
  #   needs: CodeLint
  #   permissions: read-all
  #   uses: ./.github/workflows/tpl_sonar_scan.yml
  #   secrets:
  #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
  CodeBuild:
    name: Code Build
    # needs: SonarScan
    uses: ./.github/workflows/tpl_build_dockerhub.yml
    with:
      aws-region: "us-east-2"
      aws-id: "012345678910"
      ecr-name: "k8s-frontend"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  
  UpdateTag:
    name: Update Tag
    needs: CodeBuild
    uses: ./.github/workflows/tpl_update_tag.yml
    secrets:
      DEVOPS_DEPLOY_TOKEN: ${{ secrets.DEVOPS_DEPLOY_TOKEN }}
    with:
      img-tag: ${{ needs.CodeBuild.outputs.img_tag }}

  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2"
